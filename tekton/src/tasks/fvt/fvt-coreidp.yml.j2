---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: mas-fvt-coreidp
spec:
  params:
    # Control the image pull policy for the FVT container image
    - name: image_pull_policy
      type: string
      default: IfNotPresent

    # Test Container Information
    # -------------------------------------------------------------------------
    - name: fvt_image_registry
      type: string
      description: FVT Container Image Registry (required)
    - name: fvt_digest_core
      type: string
      description: FVT Container Image Digest
    - name: fvt_digest_coreui
      type: string
      description: FVT Container Image Digest for UI tests

    # Test Framework Information
    # -------------------------------------------------------------------------
    - name: fvt_enable_debug
      type: string
      description: Turn on debug logging (verbose mode)
      default: "true"

    - name: devops_mongo_uri
      type: string
      description: Mongo URI for recording test results (optional)
      default: ""
    - name: devops_build_number
      type: string
      description: Build number to record test result (optional)
      default: ""

    - name: product_channel
      type: string
      description: "Subscription channel for the product (todo: have the test code look this up instead)"
      default: ""

    - name: mas_instance_id
      type: string
      description: Instance ID of the target test environment
    - name: mas_workspace_id
      type: string
      description: Workspace ID in MAS to use for running the tests

    # Optional parameters to categorize result to be persisted
    # -------------------------------------------------------------------------
    - name: devops_test_type
      type: string
      description: Optional. Used to different upgrade tests from other type of tests
      default: ""
    - name: devops_test_phase
      type: string
      description: Optional. Used to categorize the phase of pipeline this test is running. Used by integrated pipelines like upgrade-test
      default: ""

  stepTemplate:
    env:
      # What are we testing?
      - name: PRODUCT_ID
        value: ibm-mas
      - name: PRODUCT_CHANNEL
        value: $(params.product_channel)
      - name: NAMESPACE
        value: "mas-$(params.mas_instance_id)-core"
      - name: INSTANCE_ID
        value: "$(params.mas_instance_id)"
      - name: WORKSPACE_ID
        value: "$(params.mas_workspace_id)"

      # Enable results to be saved
      - name: DEVOPS_MONGO_URI
        value: $(params.devops_mongo_uri)
      - name: BUILD_NUM
        value: $(params.devops_build_number)

      # The name of the test suite inside the container we will execute (/opt/ibm/test/suites/{TEST_SUITE})
      - name: TEST_SUITE
        value: $(params.test_suite)

      # Set the logging level to debug if this is set to true
      - name: FVT_ENABLE_DEBUG
        value: "$(params.fvt_enable_debug)"

      # Parameters for tests
      - name: IBMADMIN_ENABLED
        value: "true"

      # Optional parameters to categorize result to be persisted
      - name: DEVOPS_TEST_TYPE
        value: $(params.devops_test_type)
      - name: DEVOPS_TEST_PHASE
        value: $(params.devops_test_phase)
  steps:
    # LDAP
    # -------------------------------------------------------------------------
    - name: fvt-coreidp-ldap
      image: '$(params.fvt_image_registry)/mas-devops/fvt-ibm-mas@$(params.fvt_digest_core)'
      env:
        - name: TEST_SUITE
          value: coreidp-ldap
      imagePullPolicy: $(params.image_pull_policy)
      timeout: 90m # Ensure bad FVTs don't run forever
      onError: continue # Ensure bad FVTs don't break the pipeline
      resources: {}
      workingDir: /opt/ibm/test/src
      volumeMounts:
        - mountPath: /dev/shm
          name: dshm

    # SAML
    # -------------------------------------------------------------------------
    - name: fvt-coreidp-saml
      image: '$(params.fvt_image_registry)/mas-devops/fvt-ibm-mas@$(params.fvt_digest_core)'
      env:
        - name: TEST_SUITE
          value: coreidp-saml
      imagePullPolicy: $(params.image_pull_policy)
      timeout: 90m # Ensure bad FVTs don't run forever
      onError: continue # Ensure bad FVTs don't break the pipeline
      resources: {}
      workingDir: /opt/ibm/test/src
      volumeMounts:
        - mountPath: /dev/shm
          name: dshm

    # SAML (UI)
    # -------------------------------------------------------------------------
    - name: fvt-coreidp-saml-ui
      image: '$(params.fvt_image_registry)/mas-devops/fvt-ibm-mas-ui@$(params.fvt_digest_coreui)'
      env:
        - name: TEST_SUITE
          value: coreidp-saml-ui
      imagePullPolicy: $(params.image_pull_policy)
      timeout: 90m # Ensure bad FVTs don't run forever
      onError: continue # Ensure bad FVTs don't break the pipeline
      resources: {}
      workingDir: /opt/ibm/test/src
      volumeMounts:
        - mountPath: /dev/shm
          name: dshm

    # Auth
    # -------------------------------------------------------------------------
    - name: fvt-coreidp-auth
      image: '$(params.fvt_image_registry)/mas-devops/fvt-ibm-mas@$(params.fvt_digest_core)'
      env:
        - name: TEST_SUITE
          value: coreidp-auth
      imagePullPolicy: $(params.image_pull_policy)
      timeout: 90m # Ensure bad FVTs don't run forever
      onError: continue # Ensure bad FVTs don't break the pipeline
      resources: {}
      workingDir: /opt/ibm/test/src
      volumeMounts:
        - mountPath: /dev/shm
          name: dshm
  volumes:
    - name: dshm
      emptyDir:
        medium: Memory

  workspaces:
    - name: configs
